@using PalmHill.BlazorChat.ApiClient
@using PalmHill.BlazorChat.Shared.Models
@inject BlazorChatApi BlazorChatApi

@if (Attachment != null)
{

    var presenceStatus = Attachment.Status switch
    {
        AttachmentStatus.Pending => PresenceStatus.Away,
        AttachmentStatus.Uploaded => PresenceStatus.Available,
        AttachmentStatus.Failed => PresenceStatus.Busy,
        _ => PresenceStatus.Busy
    };


    <FluentPresenceBadge Style="width:100%;" Status="presenceStatus">
        <FluentCard Style="width:100%; padding:3px 3px" >
            <div>
                @Attachment.Name
            </div>
            <FluentButton IconStart="@(new Icons.Regular.Size16.Delete())"
                          Loading="@loading"
                          OnClick="@DeleteAttachment">
            </FluentButton>
            
        </FluentCard>
        
    </FluentPresenceBadge>


}


@code {
    [Parameter]
    public AttachmentInfo? Attachment { get; set; }

    [Parameter]
    public EventCallback<AttachmentInfo>? OnFileDeleted { get; set; }

    bool loading = false;

    async Task DeleteAttachment()
    {
        if(Attachment == null)
        { 
            return; 
        }

        await BlazorChatApi.Attachment.DeleteAttachment(Attachment.Id);

        if (OnFileDeleted == null) 
        { 
            return; 
        }
        await OnFileDeleted?.InvokeAsync(Attachment);

    }

}
