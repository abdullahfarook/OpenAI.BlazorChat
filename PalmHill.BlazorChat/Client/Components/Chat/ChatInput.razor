@using Microsoft.AspNetCore.Components.Forms
@using System.Collections.Concurrent
@inject IJSRuntime JSRuntime

<style>
    .counterbadge-container
    {
        display:block !important;
    }

</style>

<FluentFooter Class="w-100" Style="position:fixed; bottom:15px;">
    <FluentStack Class="chat-messages input-area">
        <div class="file-input-area" @onclick="ShowAttachmentPanel">
            @*Not wrapping this in an if block. Use css to hide. FluentInputFile won't work if the element disappears from the DOM. *@

            @{
                var isProgressCssClass = ((progressPercent == 0 || progressPercent == 100) ? string.Empty : "hidden");
            }

            @if (progressPercent > 0 && progressPercent < 100)
            {
                <FluentProgressRing Style="height:32px; margin-top:6px" />
            }

            <FluentCounterBadge 
                Count="attachments.Count" 
                ShowZero="true" 
                BottomPosition="-10" 
                Class="@isProgressCssClass"
            >
                <FluentButton 
                    Id="uploadButton" 
                    
                    Class="@isProgressCssClass" 
                    IconStart="(new Icons.Regular.Size24.Attach())" 
                    Style="margin-top:6px;"
                ></FluentButton>
            </FluentCounterBadge>
        </div>
        <div style="flex-grow:1;" class="min-h-100">
            <textarea 
                placeholder="Shift+Enter for new line" 
                rows="1" 
                @ref="textAreaElement" 
                @bind="Controller!.UserInput" 
                class="main-textarea" 
                @onkeyup="HandleKeyPress" 
                @bind:event="oninput"
            ></textarea>
        </div>
        <div>
            <FluentButton @ref="sendButton" 
                OnClick="Send" 
                Loading="Loading" 
                Appearance="Appearance.Accent" 
                IconStart="(new Icons.Regular.Size24.Send())" 
                Style="margin-top:6px;"></FluentButton>
        </div>
    </FluentStack>
</FluentFooter>


@code {
    [Parameter]
    public ChatService? Controller { get; set; }


    private ElementReference textAreaElement;
    private string messageInput = string.Empty;
    private FluentButton? sendButton;
    private int progressPercent = 0;
    private string progressTitle = string.Empty;
    private ConcurrentDictionary<string, AttachmentInfo> attachments = new ConcurrentDictionary<string, AttachmentInfo>();
    public UISettings UISettings { get; set; } = new UISettings();
    public List<AttachmentInfo> SelectedFiles = new List<AttachmentInfo>();
    public List<AttachmentInfo> UploadedFiles = new List<AttachmentInfo>();
    public bool Loading { get; set; } = false;
    public bool IsAttachmentMode { get; set; } = false;



    private async Task Send()
    {
        await Controller!.SendPrompt();
        await SizeTextArea();
        StateHasChanged();

    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !e.ShiftKey)
        {
            await Send();
        }
    }

    private async Task SizeTextArea()
    {
        await JSRuntime.InvokeVoidAsync("textAreaAdjust", textAreaElement);
    }



    private void ShowAttachmentPanel()
    {
        //TODO: Implement this
       // UiComponents!.AttachmentManager?.InfoPanel?.Toggle();
    }

    public void SetReady()
    {
        Loading = false;
        StateHasChanged();
    }

    public void SetAttachmentMode(bool enabled)
    {
        IsAttachmentMode = enabled;
        StateHasChanged();
    }
}
