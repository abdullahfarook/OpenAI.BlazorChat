@inject ThemeControl ThemeControl
@implements IDialogContentComponent<UISettings>

@using Microsoft.FluentUI.AspNetCore.Components.DesignTokens
@using PalmHill.BlazorChat.Shared.Models





<FluentStack Orientation="Orientation.Vertical">

    <FluentSwitch 
        ValueChanged="ChangeThemeChecked"
        Value="Content.DarkMode"
        Label="Dark Mode"
    ></FluentSwitch>

    <FluentTextArea 
        Label="System Prompt"
        @bind-Value="Content.SystemMessage"
        Rows="10"
        Class="w-100"
    ></FluentTextArea>

    <SettingContainer
        Label="Temperature" 
        Min="0.1f" 
        Max="1f" 
        Step="0.1f" 
        @bind-Value="Content.Temperature"
    ></SettingContainer>

    <SettingContainer 
        Label="Max Length" 
        Min="1" 
        Max="4096" 
        Step="1" 
        @bind-Value="Content.MaxLength">
    </SettingContainer>

    <SettingContainer
        Label="Top P" 
        Min="0.1f" 
        Max="1f" 
        Step="0.1f" 
        @bind-Value="Content.TopP"
    >
    </SettingContainer>

    <SettingContainer 
        Label="Frequency penalty"
        Min="0f" 
        Max="1f" 
        Step="0.1f"
        @bind-Value="Content.FrequencyPenalty"
    >
    </SettingContainer>

    <SettingContainer 
        Label="Presence penalty" 
        Min="0f"
        Max="1f" 
        Step="0.1f"
        @bind-Value="Content.PresencePenalty"
    >
    </SettingContainer>

</FluentStack>

@code {


    [Parameter]
    public UISettings Content { get; set; } = new UISettings();
    [CascadingParameter]
    public FluentDialog? Dialog { get; set; }

    public async Task ChangeThemeChecked(bool darkModeChecked)
    {
        Content.DarkMode = darkModeChecked;
        await ThemeControl.ChangeTheme(darkModeChecked);

    }



}
