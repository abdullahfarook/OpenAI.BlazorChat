@using Microsoft.AspNetCore.Components.Forms
@using PalmHill.BlazorChat.ApiClient
@using PalmHill.BlazorChat.Shared.Models
@using Refit
@inject BlazorChatApi BlazorChatApi


<FluentInputFile 
                 AnchorId="MyUploadBuffer"
                 DragDropZoneVisible="true"
                 Mode="InputFileMode.Stream"
                 Multiple="true"
                 MaximumFileSize="100000"
                 OnInputFileChange="UploadFiles"
                 Class="file-upload-container">
                 
    <div>
        <h5>Drag and Drop Files</h5>
        <br />
        <FluentButton Appearance="Appearance.Accent" Id="MyUploadBuffer">
            Select Files
        </FluentButton>
    </div>
</FluentInputFile>

<style>
    .file-upload-container {
        border: 2px dashed #ccc;
        border-radius: 5px;
        padding: 20px;
        text-align: center;
        cursor: pointer;
        position: relative;
    }
</style>

<FluentLabel Alignment="HorizontalAlignment.Center">
    @progressTitle
</FluentLabel>

@if (SelectedFiles.Any())
{
    <h4>Pending Upload</h4>
    <ul>
        @foreach (var file in SelectedFiles)
        {
            <li>
                @{
                    var presenceStatus = file.Status switch
                    {
                        AttachmentStatus.Pending => PresenceStatus.Away,
                        AttachmentStatus.Uploaded => PresenceStatus.Available,
                        AttachmentStatus.Failed => PresenceStatus.Busy,
                        _ => PresenceStatus.Busy
                    };
                }

                <FluentPresenceBadge Status="presenceStatus">
                    <FluentCard Appearance="Appearance.Stealth" >
                        @file.Name
                    </FluentCard>
                </FluentPresenceBadge>
            </li>
        }
    </ul>
}



@code
{
    [Parameter]
    public ChatComponents? UiComponents { get; set; }


    int? progressPercent;
    string? progressTitle;
    List<AttachmentInfo> SelectedFiles = new List<AttachmentInfo>();



    private async Task UploadFiles(InputFileChangeEventArgs e)
    {
        progressPercent = 10;
        var files = e.GetMultipleFiles();
        var uploadedCount = 0;
        foreach (var file in files)
        {
            var attachmentInfo = new AttachmentInfo();
            attachmentInfo.Name = file.Name;
            attachmentInfo.ConversationId = UiComponents?.ChatRenderer?.ConversationId.ToString() ?? "";
            attachmentInfo.Size = file.Size;
            attachmentInfo.ContentType = file.ContentType;
            attachmentInfo.Status = AttachmentStatus.Pending;

            SelectedFiles.Add(attachmentInfo);
            var stream = file.OpenReadStream(10000000);
            var streamPart = new StreamPart(stream, file.Name, file.ContentType);
            var apiResponse = await BlazorChatApi.Attachment.AddAttachment("test1z", attachmentInfo.Id, streamPart);
            // Fake for now. Should be set by websocket. When file is complted processing.
            uploadedCount++;
            progressPercent = (int)((uploadedCount / (double)files.Count()) * 100);

            if (!apiResponse.IsSuccessStatusCode)
            {
                attachmentInfo.Status = AttachmentStatus.Failed;
                continue;
            }
            attachmentInfo.Status = AttachmentStatus.Uploaded;
        }
    }
}