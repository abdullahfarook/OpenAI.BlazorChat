@inject IDialogService DialogService
@inject ThemeControl ThemeControl
@implements IDialogContentComponent<LocalStorageSettings>

@using Microsoft.FluentUI.AspNetCore.Components.DesignTokens

<FluentStack Orientation="Orientation.Vertical">

    <FluentSwitch ValueChanged="ChangeThemeChecked"
                  Value="Content.DarkMode"
                  Label="Dark Mode"></FluentSwitch>

    <FluentTextArea Label="System Prompt"
                    @bind-Value="Content.SystemMessage"
                    Rows="10"
                    Class="w-100"></FluentTextArea>

    <SettingContainer Label="Temperature"
                      Min="0.1f"
                      Max="1f"
                      Step="0.1f"
                      @bind-Value="Content.InferenceSettings.Temperature"></SettingContainer>

    <SettingContainer Label="Max Length"
                      Min="1"
                      Max="4096"
                      Step="1"
                      @bind-Value="Content.InferenceSettings.MaxLength">
    </SettingContainer>

    <SettingContainer Label="Top P"
                      Min="0.1f"
                      Max="1f"
                      Step="0.1f"
                      @bind-Value="Content.InferenceSettings.TopP">
    </SettingContainer>

    <SettingContainer Label="Frequency penalty"
                      Min="0f"
                      Max="1f"
                      Step="0.1f"
                      @bind-Value="Content.InferenceSettings.FrequencyPenalty">
    </SettingContainer>

    <SettingContainer Label="Presence penalty"
                      Min="0f"
                      Max="1f"
                      Step="0.1f"
                      @bind-Value="Content.InferenceSettings.PresencePenalty">
    </SettingContainer>

</FluentStack>

@code {


    [Parameter]
    public LocalStorageSettings Content { get; set; } = new LocalStorageSettings();
    [CascadingParameter]
    public FluentDialog? Dialog { get; set; }

    public async Task ChangeThemeChecked(bool darkModeChecked)
    {
        Content.DarkMode = darkModeChecked;
        await ThemeControl.ChangeTheme(darkModeChecked);

    }

    public static DialogParameters<LocalStorageSettings> DefaultDialogParameters =  new()
        {

            Title = $"Settings",
            PrimaryAction = "Save",
            PrimaryActionEnabled = true,
            Width = "500px",
            TrapFocus = true,
            Modal = true,
            PreventScroll = true,
        };

 

}
